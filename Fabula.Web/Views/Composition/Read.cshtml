@using Microsoft.AspNetCore.Identity
@inject UserManager<ApplicationUser> userManager;
@model CompositionReadViewModel
@{
    ViewData["Title"] = Model.Title;

    ApplicationUser? user = await userManager.FindByIdAsync(Model.AuthorId);
}

<div class="container-fluid">
    <h1 class="text-center">@Model.Title</h1>
    <p class="text-center" style="text-decoration: none; font-size: small">
        Written by:
        <a asp-controller="User" asp-action="Profile" asp-route-userid="@Model.AuthorId" style="text-decoration: none">@Model.Author</a>
    </p>
    <div class="row">
        <div class="col-sm-12 offset-lg-2 col-lg-8 offset-xl-3 col-xl-6">
            <textarea disabled>@Model.Content</textarea>
        </div>
    </div>
</div>

@if (User?.Identity?.IsAuthenticated ?? false && user?.Id.ToString() == Model.AuthorId)
{
    <div class="row">
        <div class="col-sm-12 offset-lg-2 col-lg-8 offset-xl-3 col-xl-6" style="width: min-content">
            <a asp-action="Edit" asp-route-compositionid="@Model.Id" class="btn btn-primary">Read</a>
        </div>
    </div>
}

@section Scripts{
    <script>
        var simplemde = new SimpleMDE({
            toolbar: false,
            tabSize: 4,
        })

        simplemde.togglePreview();
    </script>
}